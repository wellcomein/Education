package LEVEL_1.lesson_6.theory.LayoutManagers;

import javax.swing.*;
import java.awt.*;

/*
Менеджер GridLayout представляет контейнер в виде таблицы с ячейками одинакового размера.
Количество строк и столбцов можно указать в конструкторе.
Есть возможность задать произвольное количество строк или столбцов, но не одновременно.
Все ячейки таблицы имеют одинаковый размер, равный самому большому компоненту в таблице.
Если произвольно увеличить размер окна, менеджер расположения GridLayout займет все доступное место и пропорционально увеличит размеры компонентов.
Если уменьшить окно, GridLayout пропорционально сожмет размеры компонентов.

Чтобы получить необходимый интерфейс окна, чаще всего совмещают панели с различными менеджерами расположения.

 */
public class GridLayoutTest extends JFrame {
    private GridLayoutTest() {
        super("GridLayoutTest");
        setSize(320, 320);
        setLocation(100, 100);
        setDefaultCloseOperation( EXIT_ON_CLOSE );
        // Вспомогательная панель
        JPanel grid = new JPanel();
        /*
         * Первые два параметра конструктора GridLayout определяют количество
         * строк и столбцов в таблице. Вторые 2 параметра -- расстояние между
         * ячейками по горизонтали и вертикали
         */
        GridLayout layout = new GridLayout(2, 0, 5, 12); // Второй параметр обозначает количетво столбцов. Если указан 0, то произвольное их воличество
        grid.setLayout(layout);

        // Создаем 8 кнопок
        for (int i = 0; i < 8; i++) {
            grid.add(new JButton("Кнопка " + i));
        }
        // Размещаем нашу панель в панели содержимого
        getContentPane().add(grid);
        // Устанавливаем оптимальный размер окна
        pack();
        // Открываем окно
        setVisible(true);
    }

    public static void main(String[] args) {
        new GridLayoutTest();
    }
}
