package LEVEL_1.lesson_4.CheckHT_Vlad;

public class Workers {
    public static void main(String[] args) {
        LEVEL_1.lesson_4.CheckHT_Vlad.Worker[] workers = new Worker[5];
        workers[0] = new Worker("Ломоножкин А.Д","Врач-травмотолог","crasher@mail.ru","+78885",50000,43);
        workers[1] = new Worker("Петров H.O","Программист","prt@mail.ru","+7918524651",2100000,25);
        workers[2] = new Worker("Орлов O.O","Охранник","Нет","+79125646",5100,53);
        workers[3] = new Worker("Лопатина Г.Е","Дворник","cleaner@mail.ru","+79176548",10000,34);
        workers[4] = new Worker("Андреев А.А","Секретарь","drdest@mail.ru","+7963541254",21000,30);
        for (int i=0; i<5;i++){
            if(workers[i].getAge()>40) workers[i].aboutWorker();
        }

/*
5. Создать классы Собака и Кот с наследованием от класса Животное;
6. Животные могут выполнять действия: бежать, плыть, перепрыгивать препятствие.
В качестве параметра каждому методу передается величина, означающая или длину препятствия
 (для бега и плавания), или высоту (для прыжков);
7. У каждого животного есть ограничения на действия (бег: кот – 200 м., собака – 500 м.;
 прыжок: кот – 2 м., собака – 0.5 м.;
  плавание: кот не умеет плавать, собака – 10 м.);
8. При попытке животного выполнить одно из этих действий,
 оно должно сообщить результат в консоль. (Например, dog1.run(150); -> результат: run: true);
9. * Добавить животным разброс в ограничениях.
То есть у одной собаки ограничение на бег может быть 400 м., у другой – 600 м

*/
    }
}
